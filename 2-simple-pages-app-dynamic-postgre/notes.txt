VSCode extensions
=================
Jinja (jinja template language support)
Python
pylint

Project Setup
==============

> python -m venv ./venv
> source ./venv/Scripts/activate

// check whats in there
> pip freeze

// install django and stuff
> pip install django
> pip install autopep8
> pip install pylint

> pip freeze

// create project
> django-admin startproject myapp .
// myapp is the name of project and . is for current directory

// run server
==============
// make sure u are in environment everytime u run server
> source ./venv/Scripts/activate

> python manage.py runserver


http://localhost:8000/
http://localhost:8000/admin
http://localhost:8000/admin/login/?next=/admin/


/////////////////////////////////////////
// create another app inside main project // called 'pages'
> python manage.py startapp pages
/////////////////////////////////////////
// more apps/sections in project
> python manage.py startapp blog



http://localhost:8000/
http://localhost:8000/about
http://localhost:8000/contact


build static folder
====================
> python manage.py collectstatic
run this command everytime you change static folder

add these two in gitignore
/static
/media



// run server
==============
// make sure u are in environment everytime u run server
> source ./venv/Scripts/activate

> python manage.py runserver

==================

connect to postgres
// install packages

// make sure u are in environment everytime u run server
> source ./venv/Scripts/activate

> pip install psycopg2
> pip install psycopg2-binary
> pip install Pillow (for images)

go to settings.py and databases area

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.postgresql',
        'NAME': 'simple-site-django',
        'USER': 'postgres',
        'PASSWORD': 'admin',
        'HOST': 'localhost'
    }
}


run migrations
==============
> python manage.py migrate

migrate will add tables in postgres db but thats after you specify db details in manage.py

run server
python manage.py runserver
http://localhost:8000/

schema
======

1- Page Name
2- Page details
3- Published or not

run migration to create schema

> python manage.py makemigrations
and 
> python manage.py migrate

tables will be created based on model

////////////////// 

create superuser
================

> python manage.py runserver

http://localhost:8000
http://localhost:8000/admin

> python manage.py createsuperuser
if it gives error
use
> winpty python manage.py createsuperuser
and select user and password

login to admin

u: admin
p: admin















